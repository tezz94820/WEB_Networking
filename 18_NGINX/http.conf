http{

    upstream allbackend {
        # ip_hash;
        server 127.0.0.1:2222;
        server 127.0.0.1:3333;
        server 127.0.0.1:4444;
        server 127.0.0.1:5555;
    }

    upstream app1backend {
        server 127.0.0.1:2222;
        server 127.0.0.1:3333;
    }

    upstream app2backend {
        server 127.0.0.1:4444;
        server 127.0.0.1:5555;
    }

    server {
        listen 80;

        location / {
            proxy_pass http://allbackend/;
        }

        location /app1 {
            proxy_pass http://app1backend/;
        }

        location /app2 {
            proxy_pass http://app2backend/;
        }

        location /admin {# to block direct access of /admin 
            return 403;
        }
    }

}

events { }


# to allow load balancing we create a upstream which is by default using round robin algo for load balancing between servers.
# here we define the server ip and port.
# here we choosed the ip to be same but the port to be differernt .
# so we created a upstream allbackedn and passed it to http://allbackend in place of http://localhost . so we are saying here replace localhost with any one of the bollowing in the defined upstream.

# by default the algo used is round robin if not specified.

# other algo used is ip_hash; this algo says if the user starts with 2222 then remain 2222 all lifecycle for it. it is very good for statefull applications

##################
# if we want to use server on port 2222,3333 for app1 and port 4444,5555 for app2.
# then make different upstream backend for app1 and app2 .