http{ # http is used because we want to work with the server http configurations of nginx. it is a block directive.
    server { # server is another block directive that holds other directives
        listen 8080; # this is also a directive .
        # so this is the default root if nothing is speciied in location.
        root /nginx/webserver_static/; # this is a directive that holds the location of the static content to be served by the nginx
        # here root starts from the c:/ . so remember root is not c:/nginx/ . ok

        location /images {
            root /nginx/; # now this is the new root for images folder . so images folder can be accessed by the nginx server and image can also be accessed.
        }

        location ~ .jpg$ {
            return 403;
        }
    }

    server {
        listen 8888;

        location / {
            proxy_pass http://localhost:8080/;
        }

        location /img {
            proxy_pass http://localhost:8080/images/;
        }
    }
}
events { } 


# we have made 2 folders in '/nginx/webserver_static/' adn named the folder as site1 and site2 . this folders have index.html file .
# this html file can be accessed by 'http://localhost:8080/site1/' or 'http://localhost:8080/site2'.

# But what if you have a images folder in  '/nginx/'and want that entire folder should not be accessible that means if user type 'http://localhost:8080/images' . the 404 error should be thrown.
# to do this we use location under server and say that  if user types 'http://localhost:8080/images/tejas.png' then the image will be given for this server .

# so by location you can change the root for that server.


####

# so for any reason if you want to block .jpg pictures from being shown. 
# then you can use location and use regular expression ~ .jpg$ to target the queries with .jpg format request. then return 403 forbidden error.

# multiple web servers
# you can create another server by server block directive.
# now this server listens at port 8888 then 
# you  want when user visits 'http://localhost:8888/'  he must be redirected to 'http://localhost:8080/
# you  want when user visits 'http://localhost:8888/images/'  he must be redirected to 'http://localhost:8080/img/
# then use location directive block for it under server which listens at port 8888 

